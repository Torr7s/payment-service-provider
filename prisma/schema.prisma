generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentMethod {
  DEBIT_CARD
  CREDIT_CARD
}

enum PayableStatus {
  PAID
  WAITING_FUNDS
}

model User {
  id              String    @id @default(uuid())
  fullName        String
  email           String    @unique
  password        String

  consumerProfile Consumer?
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  
  @@map("users")
}

model Consumer {
  id           String        @id @default(uuid())

  userProfile  User          @relation(fields: [userId], references: [id])
  userId       String        @unique

  transactions Transaction[]
  payables     Payable[]
  
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt

  @@map("consumers")
}

model Transaction {
  id                 String        @id @default(uuid())
  value              Decimal       @db.Decimal(9, 2)
  description        String
  paymentMethod      PaymentMethod
  cardNumber         String
  cardOwnerName      String
  cardExpirationDate DateTime
  cardCVV            String

  consumer           Consumer?     @relation(fields: [consumerId], references: [id])
  consumerId         String?
  
  payables           Payable?
  
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @default(now()) @updatedAt

  @@map("transactions")
}

model Payable {
  id            String         @id @default(uuid())
  status        PayableStatus?
  paymentDate   DateTime?      @db.Date
  fee           Decimal?       @db.Decimal(9, 2)
  consumer      Consumer?      @relation(fields: [consumerId], references: [id])
  consumerId    String
  transaction   Transaction?   @relation(fields: [transactionId], references: [id])
  transactionId String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt

  @@map("payables")
}
